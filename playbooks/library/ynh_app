#!/usr/bin/env python
from __future__ import unicode_literals
import subprocess
import sys
# yunohost is not in pythonpath
sys.path.insert(0,'/usr/lib/moulinette')

from ansible.module_utils.basic import *
from yunohost.app import app_info, app_setting


def get_app_settings(app_name):
    try:
        infos = app_info(app_name, raw=True)
    except IOError:
        return {}
    else:
        if infos is None:
            return {}
        else:
            # ansible provides unicode data, so let's match that
            # otherwise, dict comparison will be hard...
            return {k.decode(): (v.decode() if isinstance(v, str) else v)
                    for k, v in infos['settings'].items()}

def main():
    module = AnsibleModule(
        argument_spec=dict(
            name=dict(required=True, type='str'),
            settings=dict(
                default={},
                type='dict',
            ),
            url=dict(type='str', default=None)
        )
    )

    new_app_settings = module.params.get('settings', {})
    app_name = module.params['name']
    url = module.params.get('url', None)

    # Set URL (updates app settings under the hood)
    if url is not None:
        # FIXME: Propper call to app_checkurl but for now, I don't know how
        # to craft its "auth" argument.
        try:
            subprocess.check_output(
                ['sudo', 'yunohost', 'app', 'checkurl', url, '-a', app_name],
                stderr=subprocess.STDOUT)
        except subprocess.CalledProcessError as e:
            module.fail_json(msg='%s : %s' % (str(e), e.output or ''))

    # Fetch app settings
    initial_app_settings = get_app_settings(app_name)
    merged_app_settings = initial_app_settings.copy()

    # Update settings
    merged_app_settings.update(new_app_settings)

    app_settings_diff = {}
    for k, v in new_app_settings.items():
        if (k not in initial_app_settings) or (initial_app_settings[k] != v):
            app_settings_diff[k] = v
            app_setting(app_name, k, v)

    module.exit_json(
        msg=app_settings_diff,
        ansible_facts=dict(ynh_app_settings=merged_app_settings),
        changed_settings=len(app_settings_diff) > 0,
    )


if __name__ == '__main__':
    main()
